healthbot {
    ingest-settings {
        syslog {
            pattern EACHIP_EVENT001 {
                event-id EACHIP_EVENT001;
                filter "fpc%{NUMBER:fpc_number}.*MQSS.*BCMF CBUF.*SRAM Protect.*Parity error detected for Bank.*Sub-Bank.*memory";
                description "The \"BCMF CBUF SRAM Protect Parity error\" message reports a hardware parity error detected in the EACHIP memory. This may be due to transient hardware SRAM error on the board.";
                constant reoccur {
                    value TRUE;
                }
                constant high-threshold {
                    value 1;
                    type integer;
                }
                constant low-threshold {
                    value 0;
                    type integer;
                }
                constant syslog-trigger-color {
                    value red;
                }
                constant syslog-trigger-message {
                    value "If single log, clear alarm from CLI ('clear chassis fpc errors fpc-slot <fpc> error-code <code>', where <code> is from 'show chassis alarms').  If multiple logs, reset FPC and monitor.";
                }
                key-fields fpc_number;
            }
            pattern EACHIP_EVENT002 {
                event-id EACHIP_EVENT002;
                filter "fpc%{NUMBER:fpc_number}.*EA.*Double-bit ECC error";
                description "The \"Double-bit ECC error\" message is caused due to transient Hardware error. On-chip IDMEM memory is ECC protected. If double-bit ECC is detected, a fatal error is raised with level emergency";
                constant reoccur {
                    value TRUE;
                }
                constant high-threshold {
                    value 1;
                    type integer;
                }
                constant low-threshold {
                    value 0;
                    type integer;
                }
                constant syslog-trigger-color {
                    value red;
                }
                constant syslog-trigger-message {
                    value "The FPC will restart automatically.  Monitor for recurrence.  Contact JTAC if it occurs again.";
                }
                key-fields fpc_number;
            }
            pattern EACHIP_EVENT003 {
                event-id EACHIP_EVENT003;
                filter "fpc%{NUMBER:fpc_number}.*MQSS.*DRD.*Protect.*Parity error corrected for alloc state memory ";
                description "The \"MQSS alloc state memory\" message reports a parity error correction done in the EACHIP state memory. This is due to a software micro-code error or transient hardware error";
                constant reoccur {
                    value TRUE;
                }
                constant high-threshold {
                    value 1;
                    type integer;
                }
                constant low-threshold {
                    value 0;
                    type integer;
                }
                constant syslog-trigger-color {
                    value red;
                }
                constant syslog-trigger-message {
                    value "If single log, clear alarm from CLI ('clear chassis fpc errors fpc-slot <fpc> error-code <code>', where <code> is from 'show chassis alarms').  If multiple logs, reset FPC and monitor.";
                }
                key-fields fpc_number;
            }
            pattern EACHIP_EVENT004 {
                event-id EACHIP_EVENT004;
                filter "fpc%{NUMBER:fpc_number}.*MQSS.*LI.*Unroll TAIL length overflow";
                description "The \"Unroll TAIL length overflow\" message reports that the packet size used in the forwarding path at a certain stage is greater than the original packet size. This is likely due to a software micro-code error.";
                constant reoccur {
                    value TRUE;
                }
                constant high-threshold {
                    value 1;
                    type integer;
                }
                constant low-threshold {
                    value 0;
                    type integer;
                }
                constant syslog-trigger-color {
                    value red;
                }
                constant syslog-trigger-message {
                    value "Reset FPC immediately and monitor for recurrence.  If it recurs, then RMA.";
                }
                key-fields fpc_number;
            }
            pattern EACHIP_EVENT005 {
                event-id EACHIP_EVENT005;
                filter "fpc%{NUMBER:fpc_number}.*EA.*HMCIF.*HMCIF has no chunk index available for incoming WO read";
                description "The \"no chunk index\" message reports that the packet size used in the forwarding path at certain stage is greater than the original packet size. This is due to a transient hardware issue.";
                constant reoccur {
                    value TRUE;
                }
                constant high-threshold {
                    value 1;
                    type integer;
                }
                constant low-threshold {
                    value 0;
                    type integer;
                }
                constant syslog-trigger-color {
                    value red;
                }
                constant syslog-trigger-message {
                    value "Reset FPC during MW and monitor for recurrence.  If it recurs, then RMA.";
                }
                key-fields fpc_number;
            }
            pattern EACHIP_EVENT006 {
                event-id EACHIP_EVENT006;
                filter "fpc%{NUMBER:fpc_number}.*EA.*HMCIF Rx.*Link.*Response FIFO.*overflow";
                description "The \"Response FIFO overflow\" message reports an EACHIP memory buffer overflow condition. This is due to a transient hardware issue.Traffic impact or PFE packet forwarding is permanently compromised if errors are seen repeatedly";
                constant reoccur {
                    value TRUE;
                }
                constant high-threshold {
                    value 1;
                    type integer;
                }
                constant low-threshold {
                    value 0;
                    type integer;
                }
                constant syslog-trigger-color {
                    value red;
                }
                constant syslog-trigger-message {
                    value "Reset FPC during MW and monitor for recurrence.  If it recurs, then RMA.";
                }
                key-fields fpc_number;
            }
            pattern EACHIP_EVENT007 {
                event-id EACHIP_EVENT007;
                filter "fpc%{NUMBER:fpc_number}.*EA.*HMCIF Rx.*Link.*HMCIF Rx retry attempts failed";
                description "The \"HMCIF Rx retry attempts failed\" message reports the EACHIP HMCIF receive link is not able to be established as expected. This is due to a transient hardware issue.";
                constant reoccur {
                    value TRUE;
                }
                constant high-threshold {
                    value 1;
                    type integer;
                }
                constant low-threshold {
                    value 0;
                    type integer;
                }
                constant syslog-trigger-color {
                    value red;
                }
                constant syslog-trigger-message {
                    value "Reset FPC during MW and monitor for recurrence.  If it recurs, then RMA.";
                }
                key-fields fpc_number;
            }
            pattern EACHIP_EVENT008 {
                event-id EACHIP_EVENT008;
                filter "fpc%{NUMBER:fpc_number}.*EA.*HMCIF Rx.*Link.*HMC token overflow ";
                description "The \"Rx Link HMC token overflow\" message reports that the EACHIP HMC section is creating more tokens than the HMCIF section can track. The cause is due to a transient hardware issue.";
                constant reoccur {
                    value TRUE;
                }
                constant high-threshold {
                    value 1;
                    type integer;
                }
                constant low-threshold {
                    value 0;
                    type integer;
                }
                constant syslog-trigger-color {
                    value red;
                }
                constant syslog-trigger-message {
                    value "Reset FPC during MW and monitor for recurrence.  If it recurs, then RMA.";
                }
                key-fields fpc_number;
            }
            pattern EACHIP_EVENT009 {
                event-id EACHIP_EVENT009;
                filter "fpc%{NUMBER:fpc_number}.*XQSS.*CPQW Fast request is asserted for empty Queue";
                description "The \"Fast request is asserted for empty Queue\" message reports a software issue in the EACHIP when the internal queue is empty, but still requests processing. This is due to a transient software issue in the EACHIP. The EACHIP software state is usually reset internally to correct this condition.";
                constant reoccur {
                    value TRUE;
                }
                constant high-threshold {
                    value 1;
                    type integer;
                }
                constant low-threshold {
                    value 0;
                    type integer;
                }
                constant syslog-trigger-color {
                    value red;
                }
                constant syslog-trigger-message {
                    value "Reset FPC during MW and monitor for recurrence.  If it recurs, then RMA.";
                }
                key-fields fpc_number;
            }
            pattern EACHIP_EVENT010 {
                event-id EACHIP_EVENT010;
                filter "fpc%{NUMBER:fpc_number}.*XQSS.*CPQW Freelist Manager run out of available fl pointers";
                description "The \"Freelist Manager run out of available fl pointers\" message reports an internal software state issue in the EACHIP related to pointer management.";
                constant reoccur {
                    value TRUE;
                }
                constant high-threshold {
                    value 1;
                    type integer;
                }
                constant low-threshold {
                    value 0;
                    type integer;
                }
                constant syslog-trigger-color {
                    value red;
                }
                constant syslog-trigger-message {
                    value "Reset FPC during MW and monitor for recurrence.  If it recurs, then RMA.";
                }
                key-fields fpc_number;
            }
            pattern EACHIP_EVENT011 {
                event-id EACHIP_EVENT011;
                filter "fpc%{NUMBER:fpc_number}.*XQSS.*Qdepth underrun error in Drop engine";
                description "The \"Qdepth underrun error in Drop engine 0\" message reports an EACHIP software state issue related to buffer management. This is due to a transient software issue in the EACHIP once during packet dequeue event the 32-bit queue depth value under flowed.";
                constant reoccur {
                    value TRUE;
                }
                constant high-threshold {
                    value 1;
                    type integer;
                }
                constant low-threshold {
                    value 0;
                    type integer;
                }
                constant syslog-trigger-color {
                    value red;
                }
                constant syslog-trigger-message {
                    value "Reset FPC during MW and monitor for recurrence.  If it recurs, then RMA.";
                }
                key-fields fpc_number;
            }
            pattern EACHIP_EVENT012 {
                event-id EACHIP_EVENT012;
                filter "fpc%{NUMBER:fpc_number}.*EA.*HMCIF Rx.*total number of corrected singlebit errors from HMC.*exceeded threshold";
                description "The \"number of corrected single-bit errors from HMC\" message reports an excessive number of corrected memory errors in the EACHIP HMC section. This is due to a transient hardware issue in the EACHIP.";
                constant reoccur {
                    value FALSE;
                }
                constant high-threshold {
                    value 1;
                    type integer;
                }
                constant low-threshold {
                    value 0;
                    type integer;
                }
                constant syslog-trigger-color {
                    value red;
                }
                constant syslog-trigger-message {
                    value "Contact JTAC to permenantly repair this error via FPC-level commands.";
                }
                key-fields fpc_number;
            }
            pattern EACHIP_EVENT013 {
                event-id EACHIP_EVENT013;
                filter "fpc%{NUMBER:fpc_number}.*MQSS.*FO.*Request timeout error.*Number of timeouts.*RC select.*Stream";
                description "The \"FO: Request timeout error\" message reports a transient hardware issue in the EACHIP. This is due to another PFE / FPC going down or not responding, or packets are dropped from the reporting PFE through the fabric to the destination PFE.  The EACHIP on this FPC is only reporting the issue, and is not the source of the problem.";
                constant reoccur {
                    value FALSE;
                }
                constant high-threshold {
                    value 1;
                    type integer;
                }
                constant low-threshold {
                    value 0;
                    type integer;
                }
                constant syslog-trigger-color {
                    value red;
                }
                constant syslog-trigger-message {
                    value "Fabric hardening should kick in automatically to mitigate.  Contact JTAC for RCA and further troubleshooting.";
                }
                key-fields fpc_number;
            }
            pattern EACHIP_EVENT014 {
                event-id EACHIP_EVENT014;
                filter "fpc%{NUMBER:fpc_number}.*MQSS.*FI.*Cell underflow at the state stage.*Cell behind reorder window.*Stream.*Count";
                description "The \"Cell underflow at the state stage\" message reports a cell arriving late at the egress PFE. The is due to the fabric cells arriving late on the egress PFE behind the reorder window.";
                constant reoccur {
                    value TRUE;
                }
                constant syslog-trigger-color {
                    value red;
                }
                constant high-threshold {
                    value 1;
                    type integer;
                }
                constant low-threshold {
                    value 0;
                    type integer;
                }
                constant syslog-trigger-message {
                    value "No issue if single error.  Contact JTAC if count > 100/sec.";
                }
                key-fields fpc_number;
            }
            pattern EACHIP_EVENT015 {
                event-id EACHIP_EVENT015;
                filter "fpc%{NUMBER:fpc_number}.*MQSS.*FI.*Cell jump drop error";
                description "The \"Child drop error\" message reports cell is dropped during allocation in the fabric input reorder engine.";
                constant reoccur {
                    value FALSE;
                }
                constant high-threshold {
                    value 1;
                    type integer;
                }
                constant low-threshold {
                    value 0;
                    type integer;
                }
                constant syslog-trigger-color {
                    value red;
                }
                constant syslog-trigger-message {
                    value "Investigate originating FPC";
                }
                key-fields fpc_number;
            }
            pattern EACHIP_EVENT016 {
                event-id EACHIP_EVENT016;
                filter "fpc%{NUMBER:fpc_number}.*EA.*idmem_slice.*Corrected single bit ECC error";
                description "The \"Corrected single bit ECC error\" message is likely caused due to transient Hardware. Onchip IDMEM memory is ECC protected. If the number of single-bit ECC correction reaches 32 event within 24 hours, an CMERROR Minor Alarm Single-bit ECC error is reported. The counter will be reset every day change. Single bit ECC errors will be corrected.";
                constant reoccur {
                    value TRUE;
                }
                constant high-threshold {
                    value 1;
                    type integer;
                }
                constant low-threshold {
                    value 0;
                    type integer;
                }
                constant syslog-trigger-color {
                    value red;
                }
                constant syslog-trigger-message {
                    value "If single log, no action.  If multiple errors at same location after minor alarm is raised, contact JTAC.";
                }
                key-fields fpc_number;
            }
            pattern EACHIP_EVENT017 {
                event-id EACHIP_EVENT017;
                filter "fpc%{NUMBER:fpc_number}.*MQSS.*DRD.*CMD FSM state error";
                description "The \"CMD FSM state error\" message reports that the Forwarding State Machine of the reorder queue received an unexpected value. This indicates the lookup microcode within LUSS is sending an incorrect command parcel to the MQSS Center Chip.";
                constant reoccur {
                    value TRUE;
                }
                constant high-threshold {
                    value 1;
                    type integer;
                }
                constant low-threshold {
                    value 0;
                    type integer;
                }
                constant syslog-trigger-color {
                    value red;
                }
                constant syslog-trigger-message {
                    value "If only a single error occurs, then no RMA.  Reset the FPC to clear the alarm.  If this error occurs multiple times, then contact JTAC.";
                }
                key-fields fpc_number;
            }
            pattern EACHIP_EVENT018 {
                event-id EACHIP_EVENT018;
                filter "fpc%{NUMBER:fpc_number}.*MQSS.*FI.*Child drop error";
                description "The \"Child drop error\" message reports cell is dropped during allocation in the fabric input reorder engine.This is a signature of severe fabric cell out-of-orderness ";
                constant reoccur {
                    value FALSE;
                }
                constant high-threshold {
                    value 1;
                    type integer;
                }
                constant low-threshold {
                    value 0;
                    type integer;
                }
                constant syslog-trigger-color {
                    value red;
                }
                constant syslog-trigger-message {
                    value "Investigate originating FPC";
                }
                key-fields fpc_number;
            }
            pattern EACHIP_EVENT019 {
                event-id EACHIP_EVENT019;
                filter "fpc%{NUMBER:fpc_number}.*MQSS.*LI.*Received a parcel with more than.*accompanying data";
                description "The \"LI Received a parcel with more than 512B\" message reports a transient hardware error or EACHIP software ucode issue.";
                constant reoccur {
                    value FALSE;
                }
                constant high-threshold {
                    value 1;
                    type integer;
                }
                constant low-threshold {
                    value 0;
                    type integer;
                }
                constant syslog-trigger-color {
                    value red;
                }
                constant syslog-trigger-message {
                    value "Shutdown the affected PFE and contact JTAC for analysis";
                }
                key-fields fpc_number;
            }
            pattern EACHIP_EVENT020 {
                event-id EACHIP_EVENT020;
                filter "fpc%{NUMBER:fpc_number}.*EA.*HMCIO RX: SFIFO overflow event detected in Channel";
                description "The \"HMCIO RX: SFIFO overflow event\" messages is caused due to transient FIFO overflow condition to the Hybrid Memory Cube. This indicates that the Rx SFIFO before the serdes has detected an overflow condition which is a fatal error condition from which it cannot recover without a restart.";
                constant reoccur {
                    value FALSE;
                }
                constant high-threshold {
                    value 1;
                    type integer;
                }
                constant low-threshold {
                    value 0;
                    type integer;
                }
                constant syslog-trigger-color {
                    value red;
                }
                constant syslog-trigger-message {
                    value "Contact JTAC immediately";
                }
                key-fields fpc_number;
            }
            pattern EACHIP_EVENT021 {
                event-id EACHIP_EVENT021;
                filter "fpc%{NUMBER:fpc_number}.*EA.*HMCIO TX: AFIFO overflow event detected in Channel";
                description "The \"HMCIO TX: AFIFO overflow event\" messages is caused due to transient FIFO overflow condition. This indicates that the Tx AFIFO before the serdes has detected an overflow condition which is a fatal error condition from which it cannot recover without a reset.";
                constant reoccur {
                    value FALSE;
                }
                constant high-threshold {
                    value 1;
                    type integer;
                }
                constant low-threshold {
                    value 0;
                    type integer;
                }
                constant syslog-trigger-color {
                    value red;
                }
                constant syslog-trigger-message {
                    value "Contact JTAC immediately";
                }
                key-fields fpc_number;
            }
            pattern EACHIP_EVENT022 {
                event-id EACHIP_EVENT022;
                filter "fpc%{NUMBER:fpc_number}.*MQSS.*Cell packing interface error";
                description "The \"Cell packing interface error\" messages are caused by corrupted cell received from the HMC (Hybrid Memory Cube) interfaces.";
                constant reoccur {
                    value FALSE;
                }
                constant high-threshold {
                    value 1;
                    type integer;
                }
                constant low-threshold {
                    value 0;
                    type integer;
                }
                constant syslog-trigger-color {
                    value red;
                }
                constant syslog-trigger-message {
                    value "Reset the FPC.  If on reboot, the FPC fails POST, contact JTAC for RMA.";
                }
                key-fields fpc_number;
            }
            pattern EACHIP_EVENT023 {
                event-id EACHIP_EVENT023;
                filter "fpc%{NUMBER:fpc_number}.*EA.*Checksum error detected on";
                description "The \"Checksum error detected on\" messages are caused by corrupted cell received from the HMC (Hybrid Memory Cube) interfaces failing ECC Checksum. ECC validation has detected an error once receiving the cells from the HMC(Hybrid Memory Cube) interface.";
                constant reoccur {
                    value TRUE;
                }
                constant high-threshold {
                    value 1;
                    type integer;
                }
                constant low-threshold {
                    value 0;
                    type integer;
                }
                constant syslog-trigger-color {
                    value red;
                }
                constant syslog-trigger-message {
                    value "Restart the FPC.  If POST errors are seen on restart, contact JTAC for RMA.  Else, monitor for recurrence.";
                }
                key-fields fpc_number;
            }
            pattern EACHIP_EVENT024 {
                event-id EACHIP_EVENT024;
                filter "fpc%{NUMBER:fpc_number}.*EA.*HMCIF Rx: Link.*A response packet with a FATAL state is received from HMC";
                description "The \"response packet with a FATAL state is received from HMC with State 0x1f\" message reports a multi-bit uncorrectable error condition in the Hybrid Memory Cube. This indicates that the internal logic in the Hybrid Memory Cube has encountered a multi-bit uncorrectable error condition from which it cannot recover without a reset.";
                constant reoccur {
                    value TRUE;
                }
                constant high-threshold {
                    value 1;
                    type integer;
                }
                constant low-threshold {
                    value 0;
                    type integer;
                }
                constant syslog-trigger-color {
                    value red;
                }
                constant syslog-trigger-message {
                    value "In 15.1, FPC will restart automatically.  17.4, FPC will disable-pfe.  Reset FPC and monitor for recurrence.  If recurrs, then RMA.";
                }
                key-fields fpc_number;
            }
            pattern EACHIP_EVENT025a {
                event-id EACHIP_EVENT025a;
                filter "fpc%{NUMBER:fpc_number}.*EA.*SECONDARY_TIMEOUT";
                description "The \"SECONDARY_TIMEOUT or PRIMARY_TIMEOUT\" message is likely caused due to transient Hardware or Software defects.Each parcel during the lookup processing is checked for lookup loops, and if the time threshold is reached, a thread timeout error is reported in syslog to terminate the processing. If the termination is not successful, a secondary timeout is reported.";
                constant reoccur {
                    value TRUE;
                }
                constant high-threshold {
                    value 1;
                    type integer;
                }
                constant low-threshold {
                    value 0;
                    type integer;
                }
                constant syslog-trigger-color {
                    value red;
                }
                constant syslog-trigger-message {
                    value "Restart FPC and monitor for recurrence.";
                }
                key-fields fpc_number;
            }
            pattern EACHIP_EVENT025b {
                event-id EACHIP_EVENT025b;
                filter "fpc%{NUMBER:fpc_number}.*EA.*PRIMARY_TIMEOUT";
                description "The \"SECONDARY_TIMEOUT or PRIMARY_TIMEOUT\" message is likely caused due to transient Hardware or Software defects.Each parcel during the lookup processing is checked for lookup loops, and if the time threshold is reached, a thread timeout error is reported in syslog to terminate the processing. If the termination is not successful, a secondary timeout is reported. ";
                constant reoccur {
                    value TRUE;
                }
                constant high-threshold {
                    value 1;
                    type integer;
                }
                constant low-threshold {
                    value 0;
                    type integer;
                }
                constant syslog-trigger-color {
                    value red;
                }
                constant syslog-trigger-message {
                    value "Restart FPC and monitor for recurrence.";
                }
                key-fields fpc_number;
            }
            pattern EACHIP_EVENT026a {
                event-id EACHIP_EVENT026a;
                filter "fpc%{NUMBER:fpc_number}.*EA.*PRB_EVENERR";
                description "The \"PRB_EVENERR or PRB_ODDERR\" message is likely caused caused by a transient hardware issue in the unload block of EACHIP or XLCHIP. This error is caused by a transient SRAM parity error. The Unload block is processed once all lookup is finished and the parcel is about to get sent to the Center Chip XMCHIP or EACHIP. In all cases, these parity errors cause a wedge for the corresponding XMCHIP or EACHIP";
                constant reoccur {
                    value TRUE;
                }
                constant high-threshold {
                    value 1;
                    type integer;
                }
                constant low-threshold {
                    value 0;
                    type integer;
                }
                constant syslog-trigger-color {
                    value red;
                }
                constant syslog-trigger-message {
                    value "Restart FPC and monitor for recurrence.";
                }
                key-fields fpc_number;
            }
            pattern EACHIP_EVENT026b {
                event-id EACHIP_EVENT026b;
                filter "fpc%{NUMBER:fpc_number}.*EA.*PRB_ODDERR";
                description "The \"PRB_EVENERR or PRB_ODDERR\" message is likely caused caused by a transient hardware issue in the unload block of EACHIP or XLCHIP. This error is caused by a transient SRAM parity error. The Unload block is processed once all lookup is finished and the parcel is about to get sent to the Center Chip XMCHIP or EACHIP. In all cases, these parity errors cause a wedge for the corresponding XMCHIP or EACHIP";
                constant reoccur {
                    value TRUE;
                }
                constant high-threshold {
                    value 1;
                    type integer;
                }
                constant low-threshold {
                    value 0;
                    type integer;
                }
                constant syslog-trigger-color {
                    value red;
                }
                constant syslog-trigger-message {
                    value "Restart FPC and monitor for recurrence.";
                }
                key-fields fpc_number;
            }
            pattern EACHIP_EVENT027 {
                event-id EACHIP_EVENT027;
                filter "fpc%{NUMBER:fpc_number}.*EA.*filter.pf.*.alpha.*protect";
                description "The \"filter.pf0_1.alpha[0].protect\" message reports for EACHIP or XLCHIP a transient memory hardware issue. This is due to a transient hardware SRAM error on the filter block of XLCHIP or EACHIP.";
                constant reoccur {
                    value FALSE;
                }
                constant high-threshold {
                    value 1;
                    type integer;
                }
                constant low-threshold {
                    value 0;
                    type integer;
                }
                constant syslog-trigger-color {
                    value red;
                }
                constant syslog-trigger-message {
                    value "Deactivate and then reactivate 'fast-lookup-filter'.";
                }
                key-fields fpc_number;
            }
            pattern EACHIP_EVENT028 {
                event-id EACHIP_EVENT028;
                filter "fpc%{NUMBER:fpc_number}.*MQSS.*BCMW ICM.*Invalid cell sequence.*Packet start without SOP or.*packet bytes without SOP";
                description "The \"Invalid cell Sequence start without SOP\" message reports a software issue in the EACHIP when packets larger than 16K bytes are being processed. This is due to a software issue or transient hardware issue within the EACHIP. One possible cause may be the dynamic tunnel interface application defect adding tunnel headers during route forwarding lookup loop until it reaches the 16k limit.";
                constant reoccur {
                    value TRUE;
                }
                constant high-threshold {
                    value 1;
                    type integer;
                }
                constant low-threshold {
                    value 0;
                    type integer;
                }
                constant syslog-trigger-color {
                    value red;
                }
                constant syslog-trigger-message {
                    value "Restart the FPC.  Monitor for recurrence.";
                }
                key-fields fpc_number;
            }
            pattern EACHIP_EVENT029 {
                event-id EACHIP_EVENT029;
                filter "fpc%{NUMBER:fpc_number}.*EA.*Bist XRIF.*failed";
                description "The \"Bist XRIF 0 failed\" message reports a memory build in self test error. This is due to a memory error not passing diagnostic self test during boot initialization.";
                constant reoccur {
                    value FALSE;
                }
                constant high-threshold {
                    value 1;
                    type integer;
                }
                constant low-threshold {
                    value 0;
                    type integer;
                }
                constant syslog-trigger-color {
                    value red;
                }
                constant syslog-trigger-message {
                    value "Shutdown the FPC immediately and RMA";
                }
                key-fields fpc_number;
            }
            pattern EACHIP_EVENT030 {
                event-id EACHIP_EVENT030;
                filter "fpc%{NUMBER:fpc_number}.*EA.*reports CM err HMC BIST has detected error";
                description "The \"reports CM err HMC BIST has detected error\" message reports a memory build in self test error within Hybrid Memory Cube. This is due to a memory error not passing diagnostic self test of the Hybrid Memory Cube during boot up.";
                constant reoccur {
                    value FALSE;
                }
                constant high-threshold {
                    value 1;
                    type integer;
                }
                constant low-threshold {
                    value 0;
                    type integer;
                }
                constant syslog-trigger-color {
                    value red;
                }
                constant syslog-trigger-message {
                    value "Shutdown the FPC immediately and RMA";
                }
                key-fields fpc_number;
            }
            pattern EACHIP_EVENT031 {
                event-id EACHIP_EVENT031;
                filter "fpc%{NUMBER:fpc_number}.*EA.*CBO.*parity error";
                description "The \"CBO[.] parity error\" message is caused by a transient hardware issue which is automatically repaired. This error is caused by transient hardware defect. Conditional Branch offset memory is parity protected and will be repaired by the software.";
                constant reoccur {
                    value TRUE;
                }
                constant high-threshold {
                    value 1;
                    type integer;
                }
                constant low-threshold {
                    value 0;
                    type integer;
                }
                constant syslog-trigger-color {
                    value red;
                }
                constant syslog-trigger-message {
                    value "If few occurrences, no action.  If numerous occurrences, then contact JTAC.";
                }
                key-fields fpc_number;
            }
            pattern EACHIP_EVENT032 {
                event-id EACHIP_EVENT032;
                filter "fpc%{NUMBER:fpc_number}.*EA.*KMB.*parity error";
                description "The \"KMB[.] parity error or KMA[.] parity error \" message is caused due to a transient hardware issue which is automatically repaired. This error is caused by a transient hardware error. Constant memory errors are parity protected and will be recovered automatically from shadow space.";
                constant reoccur {
                    value TRUE;
                }
                constant high-threshold {
                    value 1;
                    type integer;
                }
                constant low-threshold {
                    value 0;
                    type integer;
                }
                constant syslog-trigger-color {
                    value red;
                }
                constant syslog-trigger-message {
                    value "If few occurrences, no action.  If numerous occurrences, then contact JTAC.";
                }
                key-fields fpc_number;
            }
            pattern EACHIP_EVENT033 {
                event-id EACHIP_EVENT033;
                filter "fpc%{NUMBER:fpc_number}.*EA.*gumem.*par_protect";
                description "The \"gumem[.].par_protect\" message is caused by a transient hardware issue which is automatically repaired. Global microcode space is parity protected. This is caused by a transient hardware issue and is repaired by the software automatically.";
                constant reoccur {
                    value TRUE;
                }
                constant high-threshold {
                    value 1;
                    type integer;
                }
                constant low-threshold {
                    value 0;
                    type integer;
                }
                constant syslog-trigger-color {
                    value red;
                }
                constant syslog-trigger-message {
                    value "If few occurrences, no action.  If numerous occurrences, then contact JTAC.";
                }
                key-fields fpc_number;
            }
            pattern EACHIP_EVENT034 {
                event-id EACHIP_EVENT034;
                filter "fpc%{NUMBER:fpc_number}.*EA.*ucode sb data error";
                description "The \"ucode sb data error\" message is caused by a transient hardware issue, which is automatically repaired. This error is caused by a transient hardware defect. Local microcode sb(single-bit) or db(double-bit) memory errors are repaired from the shadow memory space.";
                constant reoccur {
                    value TRUE;
                }
                constant high-threshold {
                    value 1;
                    type integer;
                }
                constant low-threshold {
                    value 0;
                    type integer;
                }
                constant syslog-trigger-color {
                    value red;
                }
                constant syslog-trigger-message {
                    value "If few occurrences, no action.  If numerous occurrences, then contact JTAC.";
                }
                key-fields fpc_number;
            }
            pattern EACHIP_EVENT035 {
                event-id EACHIP_EVENT035;
                filter "fpc%{NUMBER:fpc_number}.*MQSS.*FO.*Parity error detected for output buffer control";
                description "The \"Parity error detected for output buffer control\" message reports a transient hardware error in EACHIP Fabric output block. This is due to a transient hardware issue within the EACHIP Fabric output block.";
                constant reoccur {
                    value TRUE;
                }
                constant high-threshold {
                    value 1;
                    type integer;
                }
                constant low-threshold {
                    value 0;
                    type integer;
                }
                constant syslog-trigger-color {
                    value red;
                }
                constant syslog-trigger-message {
                    value "If only a few errors occur, then clear the Alarm.  Else, contact JTAC.";
                }
                key-fields fpc_number;
            }
            pattern EACHIP_EVENT036 {
                event-id EACHIP_EVENT036;
                filter "fpc%{NUMBER:fpc_number}.*MQSS.*FI.*Parity error detected for bank.*of CP table";
                description "The \"Parity error detected for bank .. of CP table\" message reports a hardware parity error detected in the EACHIP Fabric input block. This is due to a transient hardware SRAM error within EACHIP Fabric input block.";
                constant reoccur {
                    value TRUE;
                }
                constant high-threshold {
                    value 1;
                    type integer;
                }
                constant low-threshold {
                    value 0;
                    type integer;
                }
                constant syslog-trigger-color {
                    value red;
                }
                constant syslog-trigger-message {
                    value "If only a few errors occur, then clear the Alarm.  Else, contact JTAC.";
                }
                key-fields fpc_number;
            }
            pattern EACHIP_EVENT037 {
                event-id EACHIP_EVENT037;
                filter "fpc%{NUMBER:fpc_number}.*HMM.*Lane.*TX RLL event ";
                description "The \"TX RLL event\" message reports Run Length Limit (RLL) event on a Hybrid Memory Link. This indicates a Run Length Limit event on scrambled links and Junos OS will automatically retry to recover. Successful recovery will be confirmed with the second debug message with State: values between 0x20 - 0x23.​ A response packet with a benign WARNING state is received from HMC - State: 0x20";
                constant reoccur {
                    value TRUE;
                }
                constant high-threshold {
                    value 1;
                    type integer;
                }
                constant low-threshold {
                    value 0;
                    type integer;
                }
                constant syslog-trigger-color {
                    value red;
                }
                constant syslog-trigger-message {
                    value "No action if only a few occurrences.  If seen repeatedly, contact JTAC.";
                }
                key-fields fpc_number;
            }
            pattern EACHIP_EVENT038 {
                event-id EACHIP_EVENT038;
                filter "fpc%{NUMBER:fpc_number}.*MQSS.*BCMF CBUF.*Parity error corrected for buffer free list memory for bank";
                description "The \"Parity error corrected for buffer free list memory for bank\" message reports a transient hardware error which was automatically corrected. This is due to a transient hardware SRAM error with EACHIP.";
                constant reoccur {
                    value TRUE;
                }
                constant high-threshold {
                    value 1;
                    type integer;
                }
                constant low-threshold {
                    value 0;
                    type integer;
                }
                constant syslog-trigger-color {
                    value red;
                }
                constant syslog-trigger-message {
                    value "If single log, clear alarm from CLI ('clear chassis fpc errors fpc-slot <fpc> error-code <code>', where <code> is from 'show chassis alarms').  If multiple logs, reset FPC and monitor.";
                }
                key-fields fpc_number;
            }
            pattern-set EACHIP {
                pattern-names [ EACHIP_EVENT001 EACHIP_EVENT002 EACHIP_EVENT003 EACHIP_EVENT004 EACHIP_EVENT005 EACHIP_EVENT006 EACHIP_EVENT007 EACHIP_EVENT008 EACHIP_EVENT009 EACHIP_EVENT010 EACHIP_EVENT011 EACHIP_EVENT012 EACHIP_EVENT013 EACHIP_EVENT014 EACHIP_EVENT015 EACHIP_EVENT016 EACHIP_EVENT017 EACHIP_EVENT018 EACHIP_EVENT019 EACHIP_EVENT020 EACHIP_EVENT021 EACHIP_EVENT022 EACHIP_EVENT023 EACHIP_EVENT024 EACHIP_EVENT025a EACHIP_EVENT025b EACHIP_EVENT026a EACHIP_EVENT026b EACHIP_EVENT027 EACHIP_EVENT028 EACHIP_EVENT029 EACHIP_EVENT030 EACHIP_EVENT031 EACHIP_EVENT032 EACHIP_EVENT033 EACHIP_EVENT034 EACHIP_EVENT035 EACHIP_EVENT036 EACHIP_EVENT037 EACHIP_EVENT038 ];
            }
        }
    }
}