/*
 * Check FEC & unorrected CRC errors reported by ZF per link.
 * Presence of such errors will result in packet drops.
 * Large number of such errors can result in link errors.
 */
iceberg {
    topic fabric.zf {
        rule check-fec-crc-rule {
            keys link-name;
            sensor zfFec-sensor {
                iAgent {
                    file fabZfFecCrc.yml;
                    table ZfFecCrcTable;
                    frequency 10s;
                    args asic {
                        arg-value "{{asic-name-var}}";
                    }
                }
            }
            field filter {
                sensor zfFec-sensor {
                    path filter;
                }
            }
            field link-name {
                sensor zfFec-sensor {
                    where "filter > 0";
                    path link-name;
                }
                type string;
                description "Link id";
            }
            field crc {
                sensor zfFec-sensor {
                    path crc;
                }
                type integer;
                description "CRC";
            }
            field fec_uncor {
                sensor zfFec-sensor {
                    path fec_uncor;
                }
                type integer;
                description "FEC Uncor";
            }
            field predictcrc {
                formula {              
                    predict {
                        algorithm median-prediction;
                        learning-period 1d;
                        pattern-periodicity 1h;
                        field-name "$crc";
                        prediction-offset 1d;
                    }
                }
                type integer;
            }
            field dt-crc {
                formula {
                    dynamic-threshold {
                        algorithm k-means;
                        learning-period 1d;
                        pattern-periodicity 1h;
                        field-name "$crc";
                    }
                }
                type integer;
                description "dynamic threshold value for crc";
            }

            variable asic-name-var {
                type sensor-argument;
                description "ASIC name (e.g. SIB0_ZF_0) (in uppercase)";
            }

            trigger fec-uncor-sync {
		        frequency 10s;
                term highRate {
                    when {
                        greater-than-or-equal-to "$fec_uncor" 1;
                    }
                    then {
                        status {
                            color red;
                            message "high FEC uncor counts";
                        }
                    }
                }
                term normal {
                    then {
                        status {
                            color green;
                            message "normal FEC uncor counts";
                        }
                    }
                }
            }
            trigger crc-sync {
		        frequency 10s;
                term highRate {
                    when {
                        greater-than-or-equal-to "$crc" 1;
                    }
                    then {
                        status {
                            color red;
                            message "high crc counts";
                        }
                    }
                }
                term normal {
                    then {
                        status {
                            color green;
                            message "normal crc counts";
                        }
                    }
                }
            }
            trigger crc-anomaly {
		        frequency 10s;
                term crcAnomaly {
                    when {
                        equal-to "$dt-crc" 1;;
                    }
                    then {
                        status {
                            color red;
                            message "crc anomaly. Predicted crcCount: $predictcrc";
                        }
                    }
                }
                term normal {
                    then {
                        status {
                            color green;
                            message "no crc anomaly. Predicted crcCount: $predictcrc";
                        }
                    }
                }
            }
        }
    }
}

