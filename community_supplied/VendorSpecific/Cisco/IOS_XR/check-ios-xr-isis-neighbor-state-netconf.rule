/*
 * Detects ISIS adjacency state changes and notifies when anomalies are found.
 *
 */
healthbot {
    topic protocol.isis {
        rule check-ios-xr-isis-neighbor-state-netconf {
            keys [ interface system-id ];
            synopsis "ISIS session state analyzer";
            description "Collects ISIS adjacency state periodically and notify anomaly when state is down";
            sensor isis {
                iAgent {
                    file XRIsisNeighborsTable.yml;
                    table XRIsisNeighborsTable;
                    frequency 60s;
                }
            }
            field interface {
                sensor isis {
                    where "interface-name =~ /{{input-if}}/";
                    path interface-name;
                }
                type string;
                description "ISIS interfaces to be monitored";
            }
            field status {
                sensor isis {
                    path status;
                }
                type string;
                description "ISIS adjacency state";
            }
            field system-id {
                sensor isis {
                    path system-id;
                }
                type string;
                description "ISIS adjacencies to be monitored based on system-id";
            }
            field type {
                sensor isis {
                    path type;
                }
                type string;
                description "Adjacency type";
            }
            trigger isis-neighbor-state {
                frequency 1offset;
                term neighbor-up {
                    when {
                        matches-with "$status" up {
                            ignore-case;
                        }
                    }
                    then {
                        status {
                            color green;
                            message "ISIS neighbor $interface, system-id:$system-id, type:$type state is $status";
                        }
                    }
                }
                term Term_2 {
                    then {
                        status {
                            color red;
                            message "ISIS neighbor $interface, system-id:$system-id, type:$type state is $status";
                        }
                    }
                }
            }
            variable input-if {
                value .*;
                type string;
            }
            rule-properties {
                supported-devices {
                    other-vendor cisco-IOS-XR {
                        vendor-name cisco;
                        operating-system IOS-XR;
                    }
                }
                helper-files other {
                    list-of-files XRIsisNeighborsTable.yml;
                }
            }
        }
    }
}
